---
export interface Props {
  title: string;
}

const { title } = Astro.props;

// Get current page for navigation highlighting
const currentPath = Astro.url.pathname;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="LinkedIn Discovery Dashboard - Find high-performing posts and qualified leads" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <!-- Import global styles -->
    <style>
      @import '../styles/global.css';
      
      /* Global component styles */
      .card {
        @apply bg-white rounded-xl shadow-md border border-gray-100 p-6;
      }
      
      .btn-primary {
        @apply px-6 py-3 bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white font-bold rounded-xl transition-all duration-200 transform hover:scale-105 hover:shadow-lg;
      }
      
      .btn-secondary {
        @apply px-6 py-3 bg-gray-100 hover:bg-gray-200 text-gray-800 font-bold rounded-xl transition-all duration-200 transform hover:scale-105 hover:shadow-lg;
      }
      
      .refresh-btn {
        @apply px-6 py-3 bg-blue-50 hover:bg-blue-100 text-blue-600 font-semibold rounded-xl transition-all duration-200 hover:shadow-md;
      }
    </style>
    
    <!-- Main Navigation -->
    <nav class="bg-white shadow-sm border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
          <div class="flex items-center">
            <!-- Logo -->
            <div class="flex items-center space-x-3">
              <div class="w-8 h-8 bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
              </div>
              <span class="text-xl font-bold text-gray-900">LinkedIn Discovery</span>
            </div>
          </div>
          
          <!-- Navigation Links -->
          <div class="hidden md:flex items-center space-x-8">
            <a href="/" class={currentPath === '/' ? 'text-purple-600 font-medium border-b-2 border-purple-600 pb-1' : 'text-gray-600 hover:text-purple-600 font-medium transition-colors'}>
              üîç Discover
            </a>
            <a href="/inspiration" class={currentPath === '/inspiration' ? 'text-purple-600 font-medium border-b-2 border-purple-600 pb-1' : 'text-gray-600 hover:text-purple-600 font-medium transition-colors'}>
              üí° Inspiration
            </a>
            <a href="/leads" class={currentPath === '/leads' ? 'text-purple-600 font-medium border-b-2 border-purple-600 pb-1' : 'text-gray-600 hover:text-purple-600 font-medium transition-colors'}>
              üë• Leads
            </a>
            <a href="/settings" class={currentPath === '/settings' ? 'text-purple-600 font-medium border-b-2 border-purple-600 pb-1' : 'text-gray-600 hover:text-purple-600 font-medium transition-colors'}>
              ‚öôÔ∏è Settings
            </a>
            <a href="/analytics" class={currentPath === '/analytics' ? 'text-purple-600 font-medium border-b-2 border-purple-600 pb-1' : 'text-gray-600 hover:text-purple-600 font-medium transition-colors'}>
              üìä Analytics
            </a>
            
            <!-- User Menu -->
            <div id="user-menu" class="flex items-center space-x-4">
              <!-- Will be populated by Clerk -->
            </div>
          </div>
          
          <!-- Mobile menu button -->
          <div class="md:hidden flex items-center">
            <button class="text-gray-600 hover:text-purple-600" id="mobile-menu-button">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
      
      <!-- Mobile menu -->
      <div class="md:hidden hidden" id="mobile-menu">
        <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200">
          <a href="/" class={currentPath === '/' ? 'block px-3 py-2 text-purple-600 font-medium bg-purple-50 rounded-md' : 'block px-3 py-2 text-gray-600 hover:text-purple-600 hover:bg-gray-50 rounded-md'}>
            üîç Discover
          </a>
          <a href="/inspiration" class={currentPath === '/inspiration' ? 'block px-3 py-2 text-purple-600 font-medium bg-purple-50 rounded-md' : 'block px-3 py-2 text-gray-600 hover:text-purple-600 hover:bg-gray-50 rounded-md'}>
            üí° Inspiration
          </a>
          <a href="/leads" class={currentPath === '/leads' ? 'block px-3 py-2 text-purple-600 font-medium bg-purple-50 rounded-md' : 'block px-3 py-2 text-gray-600 hover:text-purple-600 hover:bg-gray-50 rounded-md'}>
            üë• Leads
          </a>
          <a href="/settings" class={currentPath === '/settings' ? 'block px-3 py-2 text-purple-600 font-medium bg-purple-50 rounded-md' : 'block px-3 py-2 text-gray-600 hover:text-purple-600 hover:bg-gray-50 rounded-md'}>
            ‚öôÔ∏è Settings
          </a>
          <a href="/analytics" class={currentPath === '/analytics' ? 'block px-3 py-2 text-purple-600 font-medium bg-purple-50 rounded-md' : 'block px-3 py-2 text-gray-600 hover:text-purple-600 hover:bg-gray-50 rounded-md'}>
            üìä Analytics
          </a>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <slot />
    </main>

    <!-- Clerk Authentication and Mobile menu toggle script -->
    <script>
      import { Clerk } from '@clerk/clerk-js';
      
      document.addEventListener('DOMContentLoaded', async function() {
        // Mobile menu toggle
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        
        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener('click', function() {
            mobileMenu.classList.toggle('hidden');
          });
        }
        
        // Clerk Authentication
        const clerkPublishableKey = import.meta.env.PUBLIC_CLERK_PUBLISHABLE_KEY;
        
        if (clerkPublishableKey) {
          const clerk = new Clerk(clerkPublishableKey);
          await clerk.load();
          
          // Check if user is signed in
          if (clerk.user) {
            // User is authenticated, show user menu
            const userMenu = document.getElementById('user-menu');
            if (userMenu) {
              userMenu.innerHTML = `
                <div class="flex items-center space-x-4">
                  <span class="text-sm text-gray-600">
                    ${clerk.user.emailAddresses[0]?.emailAddress || 'User'}
                  </span>
                  <button id="sign-out-btn" class="text-sm text-gray-600 hover:text-purple-600 font-medium">
                    Sign Out
                  </button>
                </div>
              `;
              
              // Add sign out functionality
              document.getElementById('sign-out-btn')?.addEventListener('click', async () => {
                await clerk.signOut();
                window.location.href = '/sign-in';
              });
            }
          } else {
            // User is not authenticated, redirect to sign in
            if (!window.location.pathname.includes('/sign-')) {
              window.location.href = '/sign-in';
            }
          }
        }
      });
    </script>
  </body>
</html>