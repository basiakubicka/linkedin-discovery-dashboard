{"version":3,"sources":["../../src/react/SignInButton.tsx","../../src/react/utils.tsx","../../src/react/SignOutButton.tsx","../../src/react/SignUpButton.tsx","../../src/react/uiComponents.tsx","../../src/react/controlComponents.tsx","../../src/react/hooks.ts"],"sourcesContent":["import type { SignInButtonProps, SignInProps } from '@clerk/types';\nimport React from 'react';\n\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute, withClerk, type WithClerkProp } from './utils';\n\nexport type { SignInButtonProps };\n\nexport const SignInButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<React.PropsWithChildren<SignInButtonProps>>) => {\n    const { signUpFallbackRedirectUrl, forceRedirectUrl, fallbackRedirectUrl, signUpForceRedirectUrl, mode, ...rest } =\n      props;\n    children = normalizeWithDefaultValue(children, 'Sign in');\n    const child = assertSingleChild(children)('SignInButton');\n\n    const clickHandler = () => {\n      const opts: SignInProps = {\n        forceRedirectUrl,\n        fallbackRedirectUrl,\n        signUpFallbackRedirectUrl,\n        signUpForceRedirectUrl,\n      };\n\n      if (!clerk) {\n        return;\n      }\n\n      if (mode === 'modal') {\n        return clerk.openSignIn({ ...opts, appearance: props.appearance });\n      }\n      return clerk.redirectToSignIn({\n        ...opts,\n        signInFallbackRedirectUrl: fallbackRedirectUrl,\n        signInForceRedirectUrl: forceRedirectUrl,\n      });\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  'SignInButton',\n);\n","import type { LoadedClerk } from '@clerk/types';\nimport { computed, type Store, type StoreValue } from 'nanostores';\nimport React from 'react';\n\nimport { $clerk, $csrState } from '../stores/internal';\n\n/**\n * This implementation of `useStore` is an alternative solution to the hook exported by nanostores\n * Reference: https://github.com/nanostores/react/blob/main/index.js\n */\nfunction useStore<T extends Store, SV extends StoreValue<T>>(store: T): SV {\n  const get = store.get.bind(store);\n  return React.useSyncExternalStore(store.listen, get, get);\n}\n\nexport const withClerk = <P extends { clerk: LoadedClerk | undefined | null }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  const HOC = (props: Omit<P, 'clerk'>) => {\n    const clerk = useStore(\n      computed([$csrState, $clerk], (state, clerk) => {\n        return state.isLoaded ? clerk : null;\n      }),\n    );\n\n    return (\n      <Component\n        /**\n         * Force the remount of the component if clerk is not loaded yet.\n         * This is needed in order to avoid hydration errors in controlComponents.\n         */\n        key={clerk ? 'a' : 'b'}\n        {...(props as P)}\n        clerk={clerk}\n      />\n    );\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\nexport type WithClerkProp<T = unknown> = T & {\n  clerk: LoadedClerk | undefined | null;\n};\n\n// TODO-SHARED: Duplicate from @clerk/clerk-react\nexport const assertSingleChild =\n  (children: React.ReactNode) =>\n  (name: 'SignInButton' | 'SignUpButton' | 'SignOutButton' | 'SignInWithMetamaskButton') => {\n    try {\n      return React.Children.only(children);\n    } catch {\n      return `You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\n    }\n  };\n\n// TODO-SHARED: Duplicate from @clerk/clerk-react\nexport const normalizeWithDefaultValue = (children: React.ReactNode | undefined, defaultText: string) => {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof children === 'string') {\n    children = <button type='button'>{children}</button>;\n  }\n  return children;\n};\n\n// TODO-SHARED: Duplicate from @clerk/clerk-react\nexport const safeExecute =\n  (cb: unknown) =>\n  (...args: any) => {\n    if (cb && typeof cb === 'function') {\n      return cb(...args);\n    }\n  };\n","import type { SignOutOptions } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from './utils';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute, withClerk } from './utils';\n\nexport type SignOutButtonProps = SignOutOptions & {\n  children?: React.ReactNode;\n};\n\nexport const SignOutButton = withClerk(\n  ({ clerk, children, ...props }: React.PropsWithChildren<WithClerkProp<SignOutButtonProps>>) => {\n    const { redirectUrl = '/', sessionId, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign out');\n    const child = assertSingleChild(children)('SignOutButton');\n\n    const clickHandler = () => clerk?.signOut({ redirectUrl, sessionId });\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  'SignOutButton',\n);\n","import type { SignUpButtonProps, SignUpProps } from '@clerk/types';\nimport React from 'react';\n\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute, withClerk, type WithClerkProp } from './utils';\n\nexport type { SignUpButtonProps };\n\nexport const SignUpButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<React.PropsWithChildren<SignUpButtonProps>>) => {\n    const {\n      fallbackRedirectUrl,\n      forceRedirectUrl,\n      signInFallbackRedirectUrl,\n      signInForceRedirectUrl,\n      mode,\n      unsafeMetadata,\n      ...rest\n    } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign up');\n    const child = assertSingleChild(children)('SignUpButton');\n\n    const clickHandler = () => {\n      const opts: SignUpProps = {\n        fallbackRedirectUrl,\n        forceRedirectUrl,\n        signInFallbackRedirectUrl,\n        signInForceRedirectUrl,\n        unsafeMetadata,\n      };\n\n      if (!clerk) {\n        return;\n      }\n\n      if (mode === 'modal') {\n        return clerk.openSignUp({ ...opts, appearance: props.appearance });\n      }\n\n      return clerk.redirectToSignUp({\n        ...opts,\n        signUpFallbackRedirectUrl: fallbackRedirectUrl,\n        signUpForceRedirectUrl: forceRedirectUrl,\n      });\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  'SignUpButton',\n);\n","import type {\n  GoogleOneTapProps,\n  OrganizationListProps,\n  OrganizationProfileProps,\n  OrganizationSwitcherProps,\n  PricingTableProps,\n  SignInProps,\n  SignUpProps,\n  UserButtonProps,\n  UserProfileProps,\n  WaitlistProps,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { withClerk, type WithClerkProp } from './utils';\n\nexport interface OpenProps {\n  open: ((props: any) => void) | undefined;\n  close: (() => void) | undefined;\n  props?: any;\n}\n\nexport interface MountProps {\n  mount: ((node: HTMLDivElement, props: any) => void) | undefined;\n  unmount: ((node: HTMLDivElement) => void) | undefined;\n  updateProps?: (props: any) => void;\n  props?: any;\n  // TODO: Support custom pages\n  // customPagesPortals?: any[];\n}\n\nconst isMountProps = (props: any): props is MountProps => {\n  return 'mount' in props;\n};\n\nconst isOpenProps = (props: any): props is OpenProps => {\n  return 'open' in props;\n};\n\nclass Portal extends React.PureComponent<MountProps | OpenProps> {\n  private portalRef = React.createRef<HTMLDivElement>();\n\n  componentDidUpdate(prevProps: Readonly<MountProps>) {\n    if (!isMountProps(prevProps) || !isMountProps(this.props)) {\n      return;\n    }\n    if (\n      prevProps.props.appearance !== this.props.props.appearance ||\n      prevProps.props?.customPages?.length !== this.props.props?.customPages?.length\n    ) {\n      this.props.updateProps?.({\n        node: this.portalRef.current,\n        props: this.props.props,\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (this.portalRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.mount?.(this.portalRef.current, this.props.props);\n      }\n\n      if (isOpenProps(this.props)) {\n        this.props.open?.(this.props.props);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.portalRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.unmount?.(this.portalRef.current);\n      }\n      if (isOpenProps(this.props)) {\n        this.props.close?.();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div ref={this.portalRef} />\n        {/*TODO: Support custom pages*/}\n        {/*{isMountProps(this.props) &&*/}\n        {/*  this.props?.customPagesPortals?.map((portal, index) => createElement(portal, { key: index }))}*/}\n      </>\n    );\n  }\n}\n\nexport const SignIn = withClerk(({ clerk, ...props }: WithClerkProp<SignInProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountSignIn}\n      unmount={clerk?.unmountSignIn}\n      updateProps={(clerk as any)?.__unstable__updateProps}\n      props={props}\n    />\n  );\n}, 'SignIn');\n\nexport const SignUp = withClerk(({ clerk, ...props }: WithClerkProp<SignUpProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountSignUp}\n      unmount={clerk?.unmountSignUp}\n      updateProps={(clerk as any)?.__unstable__updateProps}\n      props={props}\n    />\n  );\n}, 'SignUp');\n\nexport const UserButton = withClerk(({ clerk, ...props }: WithClerkProp<UserButtonProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountUserButton}\n      unmount={clerk?.unmountUserButton}\n      updateProps={(clerk as any)?.__unstable__updateProps}\n      props={props}\n    />\n  );\n}, 'UserButton');\n\nexport const UserProfile = withClerk(({ clerk, ...props }: WithClerkProp<UserProfileProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountUserProfile}\n      unmount={clerk?.unmountUserProfile}\n      updateProps={(clerk as any)?.__unstable__updateProps}\n      props={props}\n    />\n  );\n}, 'UserProfile');\n\nexport const OrganizationProfile = withClerk(({ clerk, ...props }: WithClerkProp<OrganizationProfileProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountOrganizationProfile}\n      unmount={clerk?.unmountOrganizationProfile}\n      updateProps={(clerk as any)?.__unstable__updateProps}\n      props={props}\n    />\n  );\n}, 'OrganizationProfile');\n\nexport const OrganizationSwitcher = withClerk(({ clerk, ...props }: WithClerkProp<OrganizationSwitcherProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountOrganizationSwitcher}\n      unmount={clerk?.unmountOrganizationSwitcher}\n      updateProps={(clerk as any)?.__unstable__updateProps}\n      props={props}\n    />\n  );\n}, 'OrganizationSwitcher');\n\nexport const OrganizationList = withClerk(({ clerk, ...props }: WithClerkProp<OrganizationListProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountOrganizationList}\n      unmount={clerk?.unmountOrganizationList}\n      updateProps={(clerk as any)?.__unstable__updateProps}\n      props={props}\n    />\n  );\n}, 'OrganizationList');\n\nexport const GoogleOneTap = withClerk(({ clerk, ...props }: WithClerkProp<GoogleOneTapProps>) => {\n  return (\n    <Portal\n      open={clerk?.openGoogleOneTap}\n      close={clerk?.closeGoogleOneTap}\n      props={props}\n    />\n  );\n}, 'GoogleOneTap');\n\nexport const Waitlist = withClerk(({ clerk, ...props }: WithClerkProp<WaitlistProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountWaitlist}\n      unmount={clerk?.unmountWaitlist}\n      props={props}\n    />\n  );\n}, 'Waitlist');\n\nexport const PricingTable = withClerk(({ clerk, ...props }: WithClerkProp<PricingTableProps>) => {\n  return (\n    <Portal\n      mount={clerk?.mountPricingTable}\n      unmount={clerk?.unmountPricingTable}\n      props={props}\n    />\n  );\n}, 'PricingTable');\n","import type { HandleOAuthCallbackParams, PendingSessionOptions } from '@clerk/types';\nimport { computed } from 'nanostores';\nimport type { PropsWithChildren } from 'react';\nimport React, { useEffect, useState } from 'react';\n\nimport { $csrState } from '../stores/internal';\nimport type { ProtectProps as _ProtectProps } from '../types';\nimport { useAuth } from './hooks';\nimport type { WithClerkProp } from './utils';\nimport { withClerk } from './utils';\n\nexport function SignedOut({ children, treatPendingAsSignedOut }: PropsWithChildren<PendingSessionOptions>) {\n  const { userId } = useAuth({ treatPendingAsSignedOut });\n\n  if (userId) {\n    return null;\n  }\n  return children;\n}\n\nexport function SignedIn({ children, treatPendingAsSignedOut }: PropsWithChildren<PendingSessionOptions>) {\n  const { userId } = useAuth({ treatPendingAsSignedOut });\n  if (!userId) {\n    return null;\n  }\n  return children;\n}\n\nconst $isLoadingClerkStore = computed($csrState, state => state.isLoaded);\n\n/*\n * It is not guaranteed that hydration will occur before clerk-js has loaded. If Clerk is loaded by the time a React component hydrates,\n * then we **hydration error** will be thrown for any control component that renders conditionally.\n *\n * This hook ensures that `isLoaded` will always be false on the first render,\n * preventing potential hydration errors and race conditions.\n */\nconst useSafeIsLoaded = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const unsub = $isLoadingClerkStore.subscribe(() => {\n      setIsLoaded(true);\n    });\n\n    return () => unsub();\n  }, []);\n\n  return isLoaded;\n};\n\nexport const ClerkLoaded = ({ children }: React.PropsWithChildren): JSX.Element | null => {\n  const isLoaded = useSafeIsLoaded();\n\n  if (!isLoaded) {\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\nexport const ClerkLoading = ({ children }: React.PropsWithChildren): JSX.Element | null => {\n  const isLoaded = useSafeIsLoaded();\n\n  if (isLoaded) {\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\nexport type ProtectProps = React.PropsWithChildren<\n  _ProtectProps & { fallback?: React.ReactNode } & PendingSessionOptions\n>;\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport const Protect = ({ children, fallback, treatPendingAsSignedOut, ...restAuthorizedParams }: ProtectProps) => {\n  const { isLoaded, has, userId } = useAuth({ treatPendingAsSignedOut });\n\n  /**\n   * Avoid flickering children or fallback while clerk is loading sessionId or userId\n   */\n  if (!isLoaded) {\n    return null;\n  }\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = <>{fallback ?? null}</>;\n\n  const authorized = <>{children}</>;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (\n    restAuthorizedParams.role ||\n    restAuthorizedParams.permission ||\n    restAuthorizedParams.feature ||\n    restAuthorizedParams.plan\n  ) {\n    if (has?.(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n};\n\n/**\n * Use `<AuthenticateWithRedirectCallback/>` to complete a custom OAuth flow.\n */\nexport const AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }: WithClerkProp<HandleOAuthCallbackParams>) => {\n    React.useEffect(() => {\n      void clerk?.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n\n    return null;\n  },\n  'AuthenticateWithRedirectCallback',\n);\n","import { createCheckAuthorization, resolveAuthState } from '@clerk/shared/authorization';\nimport { deriveState } from '@clerk/shared/deriveState';\nimport type {\n  CheckAuthorizationWithCustomPermissions,\n  Clerk,\n  ClientResource,\n  GetToken,\n  JwtPayload,\n  PendingSessionOptions,\n  SignOut,\n  UseAuthReturn,\n} from '@clerk/types';\nimport type { Store, StoreValue } from 'nanostores';\nimport { useCallback, useSyncExternalStore } from 'react';\n\nimport { authAsyncStorage } from '#async-local-storage';\n\nimport { $authStore, $clerkStore } from '../stores/external';\nimport { $clerk, $csrState } from '../stores/internal';\n\n/**\n * @internal\n */\nconst clerkLoaded = () => {\n  return new Promise<Clerk>(resolve => {\n    $csrState.subscribe(({ isLoaded }) => {\n      if (isLoaded) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        resolve($clerk.get()!);\n      }\n    });\n  });\n};\n\n/**\n * @internal\n */\nconst createGetToken = () => {\n  return async (options: any) => {\n    const clerk = await clerkLoaded();\n    if (!clerk.session) {\n      return null;\n    }\n    return clerk.session.getToken(options);\n  };\n};\n\n/**\n * @internal\n */\nconst createSignOut = () => {\n  return async (...args: any) => {\n    const clerk = await clerkLoaded();\n    return clerk.signOut(...args);\n  };\n};\n\ntype UseAuth = (options?: PendingSessionOptions) => UseAuthReturn;\n\n/**\n * Returns the current auth state, the user and session ids and the `getToken`\n * that can be used to retrieve the given template or the default Clerk token.\n *\n * Until Clerk loads, `isLoaded` will be set to `false`.\n * Once Clerk loads, `isLoaded` will be set to `true`, and you can\n * safely access the `userId` and `sessionId` variables.\n *\n * For projects using a server, you can have immediate access to this data during SSR.\n *\n * @example\n * function Hello() {\n *   const { isSignedIn, sessionId, userId } = useAuth();\n *   if(isSignedIn) {\n *     return null;\n *   }\n *   console.log(sessionId, userId)\n *   return <div>...</div>\n * }\n *\n * This page will be fully rendered during SSR:\n * @example\n * export HelloPage = () => {\n *   const { isSignedIn, sessionId, userId } = useAuth();\n *   console.log(isSignedIn, sessionId, userId)\n *   return <div>...</div>\n * }\n */\nexport const useAuth: UseAuth = ({ treatPendingAsSignedOut } = {}) => {\n  const authContext = useAuthStore();\n  const clerkContext = useStore($clerkStore);\n\n  const getToken: GetToken = useCallback(createGetToken(), []);\n  const signOut: SignOut = useCallback(createSignOut(), []);\n\n  const { userId, orgId, orgRole, orgPermissions, factorVerificationAge, sessionClaims } = authContext;\n\n  const has = useCallback(\n    (params: Parameters<CheckAuthorizationWithCustomPermissions>[0]) => {\n      return createCheckAuthorization({\n        userId,\n        orgId,\n        orgRole,\n        orgPermissions,\n        factorVerificationAge,\n        features: ((sessionClaims as JwtPayload | undefined)?.fea as string) || '',\n        plans: ((sessionClaims as JwtPayload | undefined)?.pla as string) || '',\n      })(params);\n    },\n    [userId, orgId, orgRole, orgPermissions, factorVerificationAge, sessionClaims],\n  );\n\n  const payload = resolveAuthState({\n    authObject: {\n      ...authContext,\n      getToken,\n      signOut,\n      has,\n    },\n    options: {\n      treatPendingAsSignedOut:\n        // Fallback from option provided via SSR / CSR contexts\n        treatPendingAsSignedOut ??\n        clerkContext?.__internal_getOption?.('treatPendingAsSignedOut') ??\n        import.meta.env.PUBLIC_CLERK_TREAT_PENDING_AS_SIGNED_OUT,\n    },\n  });\n\n  if (!payload) {\n    throw new Error('Invalid state. Feel free to submit a bug or reach out to support');\n  }\n\n  return payload;\n};\n\nfunction useStore<T extends Store, SV extends StoreValue<T>>(store: T, getServerSnapshot?: () => SV): SV {\n  const get = store.get.bind(store);\n  return useSyncExternalStore<SV>(store.listen, get, getServerSnapshot || get);\n}\n\n/**\n * This implementation of `useStore` is an alternative solution to the hook exported by nanostores\n * Reference: https://github.com/nanostores/react/blob/main/index.js\n */\nfunction useAuthStore() {\n  const get = $authStore.get.bind($authStore);\n  return useStore($authStore, () => {\n    // Per react docs\n    /**\n     * optional getServerSnapshot:\n     * A function that returns the initial snapshot of the data in the store.\n     * It will be used only during server rendering and during hydration of server-rendered content on the client.\n     * The server snapshot must be the same between the client and the server, and is usually serialized and passed from the server to the client.\n     * If you omit this argument, rendering the component on the server will throw an error.\n     */\n\n    /**\n     * When this runs on the server we want to grab the content from the async-local-storage.\n     */\n    if (typeof window === 'undefined') {\n      return deriveState(\n        false,\n        {\n          user: null,\n          session: null,\n          client: null as unknown as ClientResource,\n          organization: null,\n        },\n        authAsyncStorage.getStore() as any,\n      );\n    }\n\n    /**\n     * When this runs on the client, during hydration, we want to grab the content the store.\n     */\n    return get();\n  });\n}\n"],"mappings":"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","names":["React","clerk","React","React","React","React","React","React","jsx","React","computed","React","useStore","Fragment","jsx","computed","React"]}