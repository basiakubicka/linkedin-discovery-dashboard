{"version":3,"sources":["../src/async-local-storage.client.ts"],"sourcesContent":["import type { AsyncLocalStorage } from 'async_hooks';\n\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\n  'Invariant: AsyncLocalStorage accessed in runtime where it is not available',\n);\n\nclass FakeAsyncLocalStorage<Store extends object> implements AsyncLocalStorage<Store> {\n  disable(): void {\n    throw sharedAsyncLocalStorageNotAvailableError;\n  }\n\n  getStore(): Store | undefined {\n    // This fake implementation of AsyncLocalStorage always returns `undefined`.\n    return undefined;\n  }\n\n  run<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError;\n  }\n\n  exit<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError;\n  }\n\n  enterWith(): void {\n    throw sharedAsyncLocalStorageNotAvailableError;\n  }\n}\n\nfunction createAsyncLocalStorage<Store extends object>(): AsyncLocalStorage<Store> {\n  return new FakeAsyncLocalStorage();\n}\n\nexport const authAsyncStorage = createAsyncLocalStorage();\n"],"mappings":";AAEA,IAAM,2CAA2C,IAAI;AAAA,EACnD;AACF;AAEA,IAAM,wBAAN,MAAsF;AAAA,EACpF,UAAgB;AACd,UAAM;AAAA,EACR;AAAA,EAEA,WAA8B;AAE5B,WAAO;AAAA,EACT;AAAA,EAEA,MAAY;AACV,UAAM;AAAA,EACR;AAAA,EAEA,OAAa;AACX,UAAM;AAAA,EACR;AAAA,EAEA,YAAkB;AAChB,UAAM;AAAA,EACR;AACF;AAEA,SAAS,0BAA0E;AACjF,SAAO,IAAI,sBAAsB;AACnC;AAEO,IAAM,mBAAmB,wBAAwB;","names":[]}